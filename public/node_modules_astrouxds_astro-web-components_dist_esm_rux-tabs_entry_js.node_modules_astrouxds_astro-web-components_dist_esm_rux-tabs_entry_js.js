"use strict";
(self["webpackChunksvelte_app"] = self["webpackChunksvelte_app"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-tabs_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tabs.entry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tabs.entry.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rux_tabs": () => (/* binding */ RuxTabs)
/* harmony export */ });
/* harmony import */ var _index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-cf8aeed9.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/index-cf8aeed9.js");


const ruxTabsCss = ":host,.rux-tabs{--tabBorderColor:transparent;box-sizing:border-box;display:flex;justify-content:flex-start;font-size:1.5rem;min-height:5.625rem;height:100%;width:auto;margin:0;padding:0;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;contain:content;}.rux-tabs .rux-tab{border-bottom:5px solid var(--tabBorderColor)}:host([small]){min-height:3.125rem;font-size:1rem}";

const RuxTabs = class {
  constructor(hostRef) {
    (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    /**
     *  Holds all `<rux-tab-panel>` components based on the event emitted from the `<rux-tab-panels>` component.
     */
    this._panels = [];
    /**
     *  Holds all `<rux-tab>` components that are children of `<rux-tabs>`.
     */
    this._tabs = [];
  }
  handleListen(e) {
    this._registerPanels(e);
  }
  connectedCallback() {
    this.el.addEventListener('click', (e) => this._onClick(e));
    this._addTabs();
  }
  _addTabs() {
    this._tabs = Array.from(this.el.querySelectorAll('rux-tab'));
  }
  _registerPanels(e) {
    e.detail.forEach((panel) => {
      this._panels.push(panel);
    });
    // Default to first tab if none are selected
    const selectedTab = this._tabs.find((tab) => tab.selected) || this._tabs[0];
    this._setTab(selectedTab);
  }
  _onClick(e) {
    const tab = e.target;
    if (tab.getAttribute('role') === 'tab' &&
      tab.getAttribute('disabled') === null) {
      this._setTab(tab);
    }
  }
  _reset() {
    // hide everything
    this._tabs.forEach((tab) => (tab.selected = false));
    //* classLIst on rux-tab-panel is an array of strings.
    this._panels.forEach((panel) => panel.classList.add('hidden'));
  }
  _setTab(selectedTab) {
    this._reset();
    // find the panel whose aria-labeldby attribute matches the tabâ€™s id
    const selectedPanel = this._panels.find((panel) => panel.getAttribute('aria-labelledby') ===
      selectedTab.getAttribute('id'));
    if (selectedTab)
      selectedTab.selected = true;
    if (selectedPanel)
      selectedPanel.classList.remove('hidden');
  }
  render() {
    return ((0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
  }
  get el() { return (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
RuxTabs.style = ruxTabsCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_astrouxds_astro-web-components_dist_esm_rux-tabs_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-tabs_entry_js.js.map