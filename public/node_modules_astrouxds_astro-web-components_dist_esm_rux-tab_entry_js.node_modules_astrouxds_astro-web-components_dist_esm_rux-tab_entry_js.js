"use strict";
(self["webpackChunksvelte_app"] = self["webpackChunksvelte_app"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-tab_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tab.entry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tab.entry.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rux_tab": () => (/* binding */ RuxTab)
/* harmony export */ });
/* harmony import */ var _index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-cf8aeed9.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/index-cf8aeed9.js");


const ruxTabCss = ":host{--tabTextColor:var(--primary);--tabBackgroundColor:transparent;--tabBorderColor:transparent;--tabHoverTextColor:var(--defaultText);--tabSelectedTextColor:var(--defaultText);--tabSelectedBorderColor:var(--primary);box-sizing:border-box;display:flex;align-items:center;justify-content:center;padding:0 2rem;margin:0;min-width:5rem;text-decoration:none;color:var(--tabTextColor);border-bottom:5px solid var(--tabBorderColor)}:host span{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}:host([small]){min-width:2rem;border-bottom:3px solid var(--tabBorderColor)}:host([small][selected]){border-bottom:solid 3px var(--tabSelectedBorderColor)}:host([selected]){color:var(--tabSelectedTextColor);border-bottom:5px solid var(--tabSelectedBorderColor)}:host(:hover){color:var(--tabHoverTextColor)}:host([disabled]){color:var(--tabTextColor);opacity:var(--disabledOpacity);cursor:var(--disabledCursor)}";

const RuxTab = class {
  constructor(hostRef) {
    (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    /**
     *  If present, overrides which tab is selected on load / mount. By default, the first <rux-tab> item is selected.
     */
    this.selected = false;
    /**
     * If present, sets a disabled state on this tab item, indicating it cannot be selected by user action.
     */
    this.disabled = false;
  }
  connectedCallback() {
    var _a, _b;
    this.el.setAttribute('role', 'tab');
    this.el.addEventListener('click', this.clickHandler);
    if ((_b = (_a = this.el) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.getAttributeNode('small')) {
      this.el.setAttribute('small', '');
    }
  }
  clickHandler(e) {
    if (this.disabled) {
      e.stopImmediatePropagation();
    }
  }
  render() {
    return ((0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.H, { onClick: (e) => this.clickHandler(e) }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
  }
  get el() { return (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
RuxTab.style = ruxTabCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_astrouxds_astro-web-components_dist_esm_rux-tab_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-tab_entry_js.js.map