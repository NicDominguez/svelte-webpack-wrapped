{"version":3,"file":"vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-slider_entry_js.vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-slider_entry_js.js","mappings":";;;;;;;;;;;;;;;AAA6G;AAChD;;AAE7D,4BAA4B,uBAAuB,4BAA4B,wBAAwB,mCAAmC,4BAA4B,mBAAmB,0CAA0C,aAAa,YAAY,iBAAiB,eAAe,UAAU,wBAAwB,YAAY,aAAa,YAAY,mBAAmB,gCAAgC,sBAAsB,mBAAmB,WAAW,wBAAwB,qBAAqB,oBAAoB,gBAAgB,gBAAgB,WAAW,WAAW,kBAAkB,wBAAwB,aAAa,0CAA0C,aAAa,mBAAmB,eAAe,yCAAyC,oBAAoB,oCAAoC,+CAA+C,8LAA8L,uGAAuG,sCAAsC,gCAAgC,mDAAmD,oCAAoC,6BAA6B,6BAA6B,aAAa,mBAAmB,eAAe,yCAAyC,oBAAoB,oCAAoC,+CAA+C,8LAA8L,iHAAiH,sCAAsC,gCAAgC,+EAA+E,oCAAoC,6BAA6B,gCAAgC,2DAA2D,oBAAoB,oCAAoC,6BAA6B,sBAAsB,aAAa,mBAAmB,eAAe,yCAAyC,oBAAoB,oCAAoC,eAAe,8LAA8L,uGAAuG,sCAAsC,gCAAgC,2BAA2B,WAAW,yBAAyB,2BAA2B,WAAW,mDAAmD,iCAAiC,wBAAwB,kBAAkB,eAAe,8BAA8B,6BAA6B,mBAAmB,wEAAwE,mDAAmD,eAAe,UAAU,uCAAuC,gDAAgD,wDAAwD,mDAAmD,+BAA+B,6BAA6B,0CAA0C,6BAA6B,gDAAgD,2CAA2C,uDAAuD,mDAAmD,wCAAwC,yHAAyH,wDAAwD,uDAAuD,mDAAmD,wCAAwC,yHAAyH,wDAAwD,6BAA6B,qBAAqB,kBAAkB,eAAe,8BAA8B,6BAA6B,mBAAmB,wEAAwE,mDAAmD,eAAe,mDAAmD,mDAAmD,wCAAwC,mCAAmC,gDAAgD,qBAAqB,aAAa,sCAAsC,oCAAoC,6BAA6B,sBAAsB,kBAAkB,eAAe,8BAA8B,6BAA6B,mBAAmB,wEAAwE,mDAAmD,eAAe,UAAU,+BAA+B,YAAY,mBAAmB;;AAEvtK;AACA;AACA,IAAI,qDAAgB;AACpB,oBAAoB,qDAAW;AAC/B,mBAAmB,qDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAgE;AAC5E,IAAI,qDAAiB;AACrB,YAAY,qDAAC,CAAC,iDAAI,QAAQ,qDAAC,UAAU,qBAAqB,EAAE,qDAAC,YAAY,uNAAuN,IAAI,qDAAC;AACrS;AACA,aAAa,OAAO,qDAAU;AAC9B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;;;;;;;;;;;;;;;;AC5HnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqD","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-slider.entry.js","webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-0c972f04.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-cf8aeed9.js';\nimport { r as renderHiddenInput } from './utils-0c972f04.js';\n\nconst ruxSliderCss = \":host{--sliderThumbSize:19px;--sliderThumbBorderSize:2px;--sliderTrackHeight:1px;--sliderTrackBeforeThumbHeight:5px;--sliderTrackCursor:pointer;--valuePercent:50%;--top:calc(var(--sliderThumbSize) / -2.7);display:flex;flex-grow:1;flex-flow:column;cursor:pointer}*[hidden]{display:none !important}.rux-slider{display:flex;height:20px}.rux-slider :hover{cursor:var(--sliderTrackCursor)}.rux-slider :disabled{cursor:not-allowed}.rux-range{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;background:none;width:100%;margin:0px;color:transparent}input[type=range]:focus{outline:none}.rux-range::-webkit-slider-runnable-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:var(--sliderTrackBeforeThumbHeight);background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:var(--valuePercent) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range:disabled::-webkit-slider-runnable-track{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-moz-range-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:var(--sliderTrackBeforeThumbHeight);background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:calc(1 * var(--valuePercent)) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range:disabled::-moz-range-track,.rux-range:disabled::-moz-range-progress{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-moz-range-progress{background-color:var(--sliderSelectedTrackBackgroundColor)}.rux-input:disabled{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-ms-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:5px;background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:var(--valuePercent) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range::-ms-fill-lower{height:2px;background-color:#4dacff}.rux-range::-ms-fill-upper{height:2px;background-color:var(--sliderTrackBackgroundColor)}.rux-range::-webkit-slider-thumb{-webkit-appearance:none;position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer;z-index:6}.rux-range::-webkit-slider-thumb:hover{border-color:var(--sliderHoverThumbBorderColor);background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range:disabled::-webkit-slider-runnable-track{opacity:var(--disabledOpacity);cursor:var(--disabledCursor)}.rux-range:disabled::-webkit-slider-thumb{cursor:var(--disabledCursor)}.rux-range:disabled::-webkit-slider-thumb:hover{border-color:var(--sliderThumbBorderColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:focus,.rux-range:not(:disabled)::-webkit-slider-thumb:hover:not(:active){background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:focus,.rux-range:not(:disabled)::-webkit-slider-thumb:hover:not(:active){background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range::-moz-range-thumb{-moz-appearance:none;position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer}.rux-range:not(:disabled)::-moz-range-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range::-moz-range-thumb:hover{border-color:var(--sliderHoverThumbBorderColor)}input:-moz-focusring{outline:none}.rux-range:disabled::-moz-range-thumb{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-ms-thumb{position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer;z-index:6}.rux-range:disabled::-ms-thumb{opacity:0.4;cursor:not-allowed}\";\n\nconst RuxSlider = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ruxInput = createEvent(this, \"rux-input\", 7);\n    this.ruxBlur = createEvent(this, \"rux-blur\", 7);\n    /**\n     * Min value of the slider.\n     */\n    this.min = 0;\n    /**\n     * Max value of slider.\n     */\n    this.max = 100;\n    /**\n     * Step amount of slider value.\n     */\n    this.step = 1;\n    /**\n     * Current value of the slider. The default value is halfway between the specified minimum and maximum. - [HTMLElement/input_type_range>](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range)\n     */\n    this.value = (this.max - this.min) / 2 + this.min;\n    /**\n     * Determines if the slider is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Name of the Input Field for Form Submission\n     */\n    this.name = '';\n    this._onBlur = () => {\n      this.ruxBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this._updateValue();\n    this._getBrowser(navigator.userAgent.toLowerCase());\n  }\n  connectedCallback() {\n    this._onInput = this._onInput.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n  }\n  handleChange() {\n    this._updateValue();\n  }\n  handleStep() {\n    //? Value needs to be a multiple of step, otherwise slider begins to look wrong\n    this.value = this._closestMultiple(this.value, this.step);\n  }\n  //Returns the closest multiple of two given numbers.\n  _closestMultiple(n, x) {\n    if (x > n)\n      return x;\n    n = n + x / 2;\n    n = n - (n % x);\n    return n;\n  }\n  _updateValue() {\n    // If min is not a number, change it to 0\n    if (!this.min && this.min != 0) {\n      this.min = 0;\n    }\n    //If max is not a number, change it to 100\n    if (!this.max && this.max != 0) {\n      this.max = 100;\n    }\n    // If value is not a number, change it to default.\n    if (!this.value && this.value != 0) {\n      this.value = (this.max - this.min) / 2 + this.min;\n    }\n    //If step is not a number, change it to 1\n    if (!this.step) {\n      this.step = 1;\n    }\n    //Min can't be >= max\n    if (this.min >= this.max) {\n      this.min = this.max - this.step;\n    }\n    // If min is given and is greater than value, then set value to the min.\n    if (this.value < this.min) {\n      this.value = this.min;\n    }\n    //If max is given and is less than value, set value to max\n    if (this.max < this.value) {\n      this.value = this.max;\n    }\n    this._setValuePercent();\n  }\n  //Sets the --valuePercent CSS var\n  _setValuePercent() {\n    const dif = ((this.value - this.min) / (this.max - this.min)) * 100;\n    this.el.style.setProperty('--valuePercent', `${dif}%`);\n  }\n  _onInput(e) {\n    const target = e.target;\n    this.value = parseInt(target.value);\n    this._setValuePercent();\n    this.ruxInput.emit();\n  }\n  //Safari needs 0px top for the thumb to look normal.\n  _getBrowser(ua) {\n    if (ua.indexOf('safari') > -1 && ua.indexOf('chrome') == -1) {\n      this.el.style.setProperty('--top', '0px');\n    }\n  }\n  render() {\n    const { el, min, max, value, step, disabled, name, _onInput, _onBlur, } = this;\n    renderHiddenInput(true, el, name, JSON.stringify(this.value), disabled);\n    return (h(Host, null, h(\"div\", { class: \"rux-slider\" }, h(\"input\", { onInput: _onInput, type: \"range\", class: \"rux-range\", min: min, max: max, value: value, step: step, disabled: disabled, \"aria-label\": \"slider\", \"aria-disabled\": disabled ? 'true' : 'false', onBlur: () => _onBlur() })), h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"handleChange\"],\n    \"min\": [\"handleChange\"],\n    \"max\": [\"handleChange\"],\n    \"step\": [\"handleStep\"]\n  }; }\n};\nRuxSlider.style = ruxSliderCss;\n\nexport { RuxSlider as rux_slider };\n","const hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n\nexport { hasShadowDom as h, renderHiddenInput as r };\n"],"names":[],"sourceRoot":""}