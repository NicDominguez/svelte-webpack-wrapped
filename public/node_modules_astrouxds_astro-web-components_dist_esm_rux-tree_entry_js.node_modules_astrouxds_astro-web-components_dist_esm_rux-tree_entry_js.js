"use strict";
(self["webpackChunksvelte_app"] = self["webpackChunksvelte_app"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-tree_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tree.entry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-tree.entry.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rux_tree": () => (/* binding */ RuxTree)
/* harmony export */ });
/* harmony import */ var _index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-cf8aeed9.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/index-cf8aeed9.js");


const ruxTreeCss = ":host{--treeTextColor:var(--defaultText);--treeBackgroundColor:var(--surfaceElements);--treeBorderColor:var(--primaryDark);display:block;position:relative;box-sizing:border-box;padding:0px;font-size:1rem;color:var(--treeTextColor);border:solid 1px var(--treeBorderColor);background-color:var(--treeBackgroundColor);user-select:none;width:100%}";

const RuxTree = class {
  constructor(hostRef) {
    (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
  }
  connectedCallback() {
    this.handleSlotChange = this.handleSlotChange.bind(this);
    this.handleNodeSelected = this.handleNodeSelected.bind(this);
  }
  disconnectedCallback() {
    var _a;
    const slot = (_a = this.slotContainer) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
    const assignedElements = slot.assignedElements({
      flatten: true,
    });
    assignedElements.map((el) => {
      el.removeEventListener('rux-tree-node-selected', this.handleNodeSelected);
    });
  }
  handleSlotChange() {
    var _a;
    const slot = (_a = this.slotContainer) === null || _a === void 0 ? void 0 : _a.querySelector('slot');
    const assignedElements = slot.assignedElements({
      flatten: true,
    });
    assignedElements.map((el) => {
      el.setAttribute('aria-level', '1');
      el.addEventListener('rux-tree-node-selected', this.handleNodeSelected);
    });
  }
  handleNodeSelected(e) {
    const allNodes = document.querySelectorAll('rux-tree-node');
    if (allNodes) {
      const previousSelectedNode = Array.from(allNodes).find((node) => {
        var _a, _b;
        return (node.selected &&
          ((_b = (_a = node.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.tree-node')) === null || _b === void 0 ? void 0 : _b.id) !==
            e.detail);
      });
      if (previousSelectedNode) {
        previousSelectedNode.selected = false;
      }
    }
  }
  render() {
    return ((0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.H, { role: "tree" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { ref: (el) => (this.slotContainer = el) }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", { onSlotchange: this.handleSlotChange }))));
  }
  get el() { return (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
RuxTree.style = ruxTreeCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_astrouxds_astro-web-components_dist_esm_rux-tree_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-tree_entry_js.js.map