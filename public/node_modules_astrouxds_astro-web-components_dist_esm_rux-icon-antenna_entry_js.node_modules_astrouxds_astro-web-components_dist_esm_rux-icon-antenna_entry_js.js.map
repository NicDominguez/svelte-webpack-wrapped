{"version":3,"file":"node_modules_astrouxds_astro-web-components_dist_esm_rux-icon-antenna_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-icon-antenna_entry_js.js","mappings":";;;;;;;;;;;;;;AAA+D;;AAE/D;;AAEA;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAC,UAAU,kCAAkC;AACxD;AACA;;AAE8C","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-antenna.entry.js"],"sourcesContent":["import { r as registerInstance, h } from './index-cf8aeed9.js';\n\nconst svgIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 8a2 2 0 0 1 1.001 3.732L13 22h-2V11.732A2 2 0 0 1 12 8zM6.366 2.327c.336.374.356.951.016 1.325A9.042 9.042 0 0 0 5.78 15.12a.993.993 0 0 1-.148 1.323 1.009 1.009 0 0 1-1.487-.149A11.03 11.03 0 0 1 4.663 2.57l.208-.236.09-.088a1.008 1.008 0 0 1 1.405.081zm12.752-.08.09.087a11.03 11.03 0 0 1 .724 13.96 1.009 1.009 0 0 1-1.486.15.993.993 0 0 1-.148-1.324 9.042 9.042 0 0 0-.601-11.468c-.34-.374-.32-.951.016-1.325a1.008 1.008 0 0 1 1.405-.08zM9.409 5.344c.332.368.339.92.024 1.312a5.075 5.075 0 0 0-.306 5.827c.272.422.207.97-.161 1.302-.459.413-1.185.332-1.523-.18a7.078 7.078 0 0 1 .26-8.016l.173-.225.081-.09c.399-.389 1.067-.358 1.452.07zm6.713-.07.081.09a7.076 7.076 0 0 1 .433 8.24c-.338.513-1.064.594-1.523.18a1.01 1.01 0 0 1-.161-1.301 5.075 5.075 0 0 0-.307-5.827 1.01 1.01 0 0 1 .025-1.312c.385-.428 1.053-.459 1.452-.07z\" xmlns=\"http://www.w3.org/2000/svg\"/></svg>';\n\nconst RuxIconAntenna = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The size of the icon. Can be 'extra-small', 'small', 'normal', 'large', 'auto' or any custom value ('30px', '1rem', '3.321em')\n     */\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem',\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    }\n    else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      fill: this.color,\n      height: this.iconSize,\n      width: this.iconSize,\n    };\n    return h(\"div\", { style: style, innerHTML: svgIcon });\n  }\n};\n\nexport { RuxIconAntenna as rux_icon_antenna };\n"],"names":[],"sourceRoot":""}