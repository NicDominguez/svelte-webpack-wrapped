"use strict";
(self["webpackChunksvelte_app"] = self["webpackChunksvelte_app"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-modal_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-modal.entry.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-modal.entry.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rux_modal": () => (/* binding */ RuxModal)
/* harmony export */ });
/* harmony import */ var _index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-cf8aeed9.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/index-cf8aeed9.js");


const ruxModalCss = ":host{box-sizing:border-box;}*,*:before,*:after{box-sizing:inherit}*[hidden]{display:none !important}rux-button-group{margin-top:auto;margin-left:auto;align-self:flex-end}.rux-modal__wrapper{position:fixed;top:0;left:0;height:100vh;width:100vw;display:flex;justify-content:center;align-items:center;z-index:1100;background-color:rgba(0, 0, 0, 0.5)}.rux-modal__dialog{position:relative;display:flex;flex-direction:column;justify-content:space-between;background-color:var(--modalBackgroundColor);width:28rem;height:13.5rem;border:2px solid var(--modalBorderColor);border-radius:4px;margin:auto;padding:0;user-select:none;box-shadow:0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 3px rgba(0, 0, 0, 0.12), 0 4px 5px 0 rgba(0, 0, 0, 0.2)}.rux-modal__titlebar{display:flex;flex-grow:0;flex-shrink:0;justify-content:center;align-items:center;width:100%;height:2rem;background-color:var(--modalBorderColor);user-select:none;cursor:move}.rux-modal__titlebar h1{font-size:1rem;font-weight:600;line-height:1.2;padding:0;margin:0;color:var(--modalTitleColor)}.rux-modal__content{display:flex;flex-direction:column;flex-grow:1;padding:1rem;color:var(--defaultText)}.rux-modal__message{margin:0.5rem 1.875rem 2.5rem 1.875rem}rux-icon{margin-right:0.75rem}.rux-modal .rux-button{box-shadow:none !important}";

const RuxModal = class {
  constructor(hostRef) {
    (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ruxModalClosed = (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rux-modal-closed", 7);
    /**
     * Text for confirmation button
     */
    this.confirmText = 'Confirm';
    /**
     * Text for close button
     */
    this.denyText = 'Cancel';
    this.kebabize = (str) => {
      return str
        .split('')
        .map((letter, idx) => {
        return letter.toUpperCase() === letter
          ? `${idx !== 0 ? '-' : ''}${letter.toLowerCase()}`
          : letter;
      })
        .join('');
    };
  }
  // confirm dialog if Enter key is pressed
  handleKeyDown(ev) {
    if (ev.key === 'Enter') {
      const button = this._getDefaultButton();
      if (button) {
        button.click();
      }
    }
  }
  // close modal if click happens outside of dialog
  handleClick(ev) {
    const wrapper = this._getWrapper();
    if (ev.composedPath()[0] === wrapper) {
      this.ruxModalClosed.emit(false);
      this.open = false;
    }
  }
  validateName(isOpen) {
    if (isOpen) {
      setTimeout(() => {
        const button = this._getDefaultButton();
        button && button.focus();
      });
    }
  }
  _handleModalChoice(e) {
    // convert string value to boolean
    const target = e.currentTarget;
    const choice = target.dataset.value === 'true';
    this.ruxModalClosed.emit(choice);
    this.open = false;
  }
  _getDefaultButton() {
    var _a, _b;
    const buttonSet = (_b = (_a = this.element) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelectorAll('rux-button:not([hidden])');
    if (buttonSet.length > 0) {
      const defaultButton = buttonSet[buttonSet.length - 1];
      return defaultButton;
    }
    return null;
  }
  _getWrapper() {
    var _a, _b;
    const wrapper = (_b = (_a = this.element) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector('.rux-modal__wrapper');
    if (wrapper) {
      return wrapper;
    }
    return null;
  }
  connectedCallback() {
    this.validate('rux-modal', ['open', 'modalMessage', 'modalTitle']);
    setTimeout(() => {
      const button = this._getDefaultButton();
      button && button.focus();
    });
  }
  componentDidLoad() {
    setTimeout(() => {
      const button = this._getDefaultButton();
      button && button.focus();
    });
  }
  render() {
    const { open, modalMessage, modalTitle, confirmText, denyText, _handleModalChoice, } = this;
    return (open && ((0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "rux-modal__wrapper" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("dialog", { class: "rux-modal__dialog", role: "dialog" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("header", { class: "rux-modal__titlebar" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("h1", null, modalTitle)), (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "rux-modal__content" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "rux-modal__message" }, modalMessage), (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("rux-button-group", { "h-align": "right" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("rux-button", { secondary: confirmText.length > 0, onClick: _handleModalChoice.bind(this), "data-value": "false", hidden: !denyText, tabindex: "-1" }, denyText), (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("rux-button", { onClick: _handleModalChoice.bind(this), "data-value": "true", hidden: !confirmText, tabindex: "0" }, confirmText))))))));
  }
  // TODO find a way to share logic to put this validation into
  // Stencil prevents using native extends class functionality
  validate(componentTag, requiredProps) {
    const erroredFields = [];
    const isBlank = (prop) => typeof prop === 'undefined';
    requiredProps.forEach((key) => isBlank(this[key])
      ? erroredFields.push(this.kebabize(key))
      : null);
    if (erroredFields.length) {
      throw new Error(`[${componentTag}]: Following propert${erroredFields.length > 1 ? 'ies' : 'y'} (${erroredFields.join(', ')}) ${erroredFields.length > 1 ? 'are' : 'is'} required`);
    }
  }
  get element() { return (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "open": ["validateName"]
  }; }
};
RuxModal.style = ruxModalCss;




/***/ })

}]);
//# sourceMappingURL=node_modules_astrouxds_astro-web-components_dist_esm_rux-modal_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-modal_entry_js.js.map