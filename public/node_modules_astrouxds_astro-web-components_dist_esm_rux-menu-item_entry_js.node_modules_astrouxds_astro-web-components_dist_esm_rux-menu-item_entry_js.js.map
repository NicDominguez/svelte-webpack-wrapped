{"version":3,"file":"node_modules_astrouxds_astro-web-components_dist_esm_rux-menu-item_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-menu-item_entry_js.js","mappings":";;;;;;;;;;;;;;AAA6G;;AAE7G,8BAA8B,cAAc,SAAS,wBAAwB,eAAe,gBAAgB,eAAe,eAAe,2CAA2C,eAAe,qDAAqD,oCAAoC,wBAAwB,uBAAuB,qBAAqB,2BAA2B,eAAe,mBAAmB,gBAAgB,WAAW,cAAc,YAAY,WAAW,kBAAkB,6BAA6B,2BAA2B,6BAA6B,gDAAgD,+BAA+B;;AAEppB;AACA;AACA,IAAI,qDAAgB;AACpB,+BAA+B,qDAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wCAAwC;AACpD;AACA,2CAA2C,8BAA8B;AACzE,YAAY,qDAAC,CAAC,iDAAI,IAAI,2CAA2C,EAAE,qDAAC,aAAa,qDAAC,0BAA0B,eAAe,qDAAC,WAAW,eAAe,GAAG,qDAAC;AAC1J;AACA,aAAa,OAAO,qDAAU;AAC9B;AACA;;AAEwC","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-menu-item.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-cf8aeed9.js';\n\nconst ruxMenuItemCss = \":host{display:block}:host li{padding:0.15rem 0.75rem;font-size:1rem;overflow:hidden;min-width:15em;max-width:20em;background-color:--menuItemBackgroundColor}:host li:hover{background-color:var(--menuItemHoverBackgroundColor);color:var(--menuItemHoverTextColor)}:host li a,:host li div{text-overflow:ellipsis;text-decoration:none;color:var(--menuTextColor);word-wrap:none;white-space:nowrap;overflow:hidden}:host li a{display:block;padding:0px;width:100%}:host([disabled]){cursor:var(--disabledCursor)}:host([disabled]) li:hover{background-color:transparent}:host([disabled]) li a,:host([disabled]) li div{opacity:var(--disabledOpacity)}\";\n\nconst RuxMenuItem = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ruxMenuItemSelected = createEvent(this, \"rux-menu-item-selected\", 7);\n    /**\n     * Disables the item\n     */\n    this.disabled = false;\n    this.itemOnClick = () => {\n      const emittedValue = this.value ? this.value : this.el.textContent;\n      this.ruxMenuItemSelected.emit({ value: emittedValue });\n    };\n  }\n  handleClick() {\n    if (!this.disabled) {\n      this.itemOnClick();\n    }\n  }\n  render() {\n    const { disabled, href, rel, download, target } = this;\n    const TagType = href ? 'a' : 'div';\n    const attributes = TagType === 'a' ? { download, href, rel, target } : {};\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null }, h(\"li\", null, h(TagType, Object.assign({}, attributes), h(\"slot\", { name: \"start\" }), h(\"slot\", null)))));\n  }\n  get el() { return getElement(this); }\n};\nRuxMenuItem.style = ruxMenuItemCss;\n\nexport { RuxMenuItem as rux_menu_item };\n"],"names":[],"sourceRoot":""}