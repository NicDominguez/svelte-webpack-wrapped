"use strict";
(self["webpackChunksvelte_app"] = self["webpackChunksvelte_app"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-slider_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-slider.entry.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-slider.entry.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rux_slider": () => (/* binding */ RuxSlider)
/* harmony export */ });
/* harmony import */ var _index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-cf8aeed9.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/index-cf8aeed9.js");
/* harmony import */ var _utils_0c972f04_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils-0c972f04.js */ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-0c972f04.js");



const ruxSliderCss = ":host{--sliderThumbSize:19px;--sliderThumbBorderSize:2px;--sliderTrackHeight:1px;--sliderTrackBeforeThumbHeight:5px;--sliderTrackCursor:pointer;--valuePercent:50%;--top:calc(var(--sliderThumbSize) / -2.7);display:flex;flex-grow:1;flex-flow:column;cursor:pointer}*[hidden]{display:none !important}.rux-slider{display:flex;height:20px}.rux-slider :hover{cursor:var(--sliderTrackCursor)}.rux-slider :disabled{cursor:not-allowed}.rux-range{-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;background:none;width:100%;margin:0px;color:transparent}input[type=range]:focus{outline:none}.rux-range::-webkit-slider-runnable-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:var(--sliderTrackBeforeThumbHeight);background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:var(--valuePercent) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range:disabled::-webkit-slider-runnable-track{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-moz-range-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:var(--sliderTrackBeforeThumbHeight);background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:calc(1 * var(--valuePercent)) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range:disabled::-moz-range-track,.rux-range:disabled::-moz-range-progress{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-moz-range-progress{background-color:var(--sliderSelectedTrackBackgroundColor)}.rux-input:disabled{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-ms-track{display:flex;align-items:center;max-width:100%;cursor:var(--sliderTrackCursor, pointer);border-radius:2.5px;min-height:var(--sliderTrackHeight);max-height:5px;background-image:linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor)), linear-gradient(var(--sliderTrackBackgroundColor), var(--sliderTrackBackgroundColor));background-size:var(--valuePercent) var(--sliderTrackBeforeThumbHeight), 100% var(--sliderTrackHeight);background-repeat:no-repeat no-repeat;background-position:left, right}.rux-range::-ms-fill-lower{height:2px;background-color:#4dacff}.rux-range::-ms-fill-upper{height:2px;background-color:var(--sliderTrackBackgroundColor)}.rux-range::-webkit-slider-thumb{-webkit-appearance:none;position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer;z-index:6}.rux-range::-webkit-slider-thumb:hover{border-color:var(--sliderHoverThumbBorderColor);background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range:disabled::-webkit-slider-runnable-track{opacity:var(--disabledOpacity);cursor:var(--disabledCursor)}.rux-range:disabled::-webkit-slider-thumb{cursor:var(--disabledCursor)}.rux-range:disabled::-webkit-slider-thumb:hover{border-color:var(--sliderThumbBorderColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:focus,.rux-range:not(:disabled)::-webkit-slider-thumb:hover:not(:active){background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range:not(:disabled)::-webkit-slider-thumb:focus,.rux-range:not(:disabled)::-webkit-slider-thumb:hover:not(:active){background-color:var(--sliderHoverThumbBackgroundColor)}.rux-range::-moz-range-thumb{-moz-appearance:none;position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer}.rux-range:not(:disabled)::-moz-range-thumb:active{border-color:var(--sliderSelectedThumbBorderColor);background-color:var(--backgroundColor)}.rux-range::-moz-range-thumb:hover{border-color:var(--sliderHoverThumbBorderColor)}input:-moz-focusring{outline:none}.rux-range:disabled::-moz-range-thumb{opacity:var(--disabledOpacity, 0.4);cursor:var(--disabledCursor)}.rux-range::-ms-thumb{position:relative;top:var(--top);height:var(--sliderThumbSize);width:var(--sliderThumbSize);border-radius:100%;border:var(--sliderThumbBorderSize) solid var(--sliderThumbBorderColor);background-color:var(--sliderThumbBackgroundColor);cursor:pointer;z-index:6}.rux-range:disabled::-ms-thumb{opacity:0.4;cursor:not-allowed}";

const RuxSlider = class {
  constructor(hostRef) {
    (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.ruxInput = (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rux-input", 7);
    this.ruxBlur = (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "rux-blur", 7);
    /**
     * Min value of the slider.
     */
    this.min = 0;
    /**
     * Max value of slider.
     */
    this.max = 100;
    /**
     * Step amount of slider value.
     */
    this.step = 1;
    /**
     * Current value of the slider. The default value is halfway between the specified minimum and maximum. - [HTMLElement/input_type_range>](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range)
     */
    this.value = (this.max - this.min) / 2 + this.min;
    /**
     * Determines if the slider is disabled.
     */
    this.disabled = false;
    /**
     * Name of the Input Field for Form Submission
     */
    this.name = '';
    this._onBlur = () => {
      this.ruxBlur.emit();
    };
  }
  componentWillLoad() {
    this._updateValue();
    this._getBrowser(navigator.userAgent.toLowerCase());
  }
  connectedCallback() {
    this._onInput = this._onInput.bind(this);
    this._onBlur = this._onBlur.bind(this);
  }
  handleChange() {
    this._updateValue();
  }
  handleStep() {
    //? Value needs to be a multiple of step, otherwise slider begins to look wrong
    this.value = this._closestMultiple(this.value, this.step);
  }
  //Returns the closest multiple of two given numbers.
  _closestMultiple(n, x) {
    if (x > n)
      return x;
    n = n + x / 2;
    n = n - (n % x);
    return n;
  }
  _updateValue() {
    // If min is not a number, change it to 0
    if (!this.min && this.min != 0) {
      this.min = 0;
    }
    //If max is not a number, change it to 100
    if (!this.max && this.max != 0) {
      this.max = 100;
    }
    // If value is not a number, change it to default.
    if (!this.value && this.value != 0) {
      this.value = (this.max - this.min) / 2 + this.min;
    }
    //If step is not a number, change it to 1
    if (!this.step) {
      this.step = 1;
    }
    //Min can't be >= max
    if (this.min >= this.max) {
      this.min = this.max - this.step;
    }
    // If min is given and is greater than value, then set value to the min.
    if (this.value < this.min) {
      this.value = this.min;
    }
    //If max is given and is less than value, set value to max
    if (this.max < this.value) {
      this.value = this.max;
    }
    this._setValuePercent();
  }
  //Sets the --valuePercent CSS var
  _setValuePercent() {
    const dif = ((this.value - this.min) / (this.max - this.min)) * 100;
    this.el.style.setProperty('--valuePercent', `${dif}%`);
  }
  _onInput(e) {
    const target = e.target;
    this.value = parseInt(target.value);
    this._setValuePercent();
    this.ruxInput.emit();
  }
  //Safari needs 0px top for the thumb to look normal.
  _getBrowser(ua) {
    if (ua.indexOf('safari') > -1 && ua.indexOf('chrome') == -1) {
      this.el.style.setProperty('--top', '0px');
    }
  }
  render() {
    const { el, min, max, value, step, disabled, name, _onInput, _onBlur, } = this;
    (0,_utils_0c972f04_js__WEBPACK_IMPORTED_MODULE_1__.r)(true, el, name, JSON.stringify(this.value), disabled);
    return ((0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "rux-slider" }, (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("input", { onInput: _onInput, type: "range", class: "rux-range", min: min, max: max, value: value, step: step, disabled: disabled, "aria-label": "slider", "aria-disabled": disabled ? 'true' : 'false', onBlur: () => _onBlur() })), (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
  }
  get el() { return (0,_index_cf8aeed9_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "value": ["handleChange"],
    "min": ["handleChange"],
    "max": ["handleChange"],
    "step": ["handleStep"]
  }; }
};
RuxSlider.style = ruxSliderCss;




/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-0c972f04.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-0c972f04.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h": () => (/* binding */ hasShadowDom),
/* harmony export */   "r": () => (/* binding */ renderHiddenInput)
/* harmony export */ });
const hasShadowDom = (el) => {
  return !!el.shadowRoot && !!el.attachShadow;
};
/**
* This method is used to add a hidden input to a host element that contains
* a Shadow DOM. It does not add the input inside of the Shadow root which
* allows it to be picked up inside of forms. It should contain the same
* values as the host element.
* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198

*
* @param always Add a hidden input even if the container does not use Shadow
* @param container The element where the input will be added
* @param name The name of the input
* @param value The value of the input
* @param disabled If true, the input is disabled
* @param checked Optional. If true, the input is checked
*/
const renderHiddenInput = (always, container, name, value, disabled, checked) => {
  let input = container.querySelector('input.aux-input');
  if (always || hasShadowDom(container)) {
    if (checked || checked == undefined) {
      if (!input) {
        input = container.ownerDocument.createElement('input');
        input.type = 'hidden';
        input.classList.add('aux-input');
        container.appendChild(input);
      }
      input.disabled = disabled;
      input.name = name;
      input.value = value || '';
    }
    else {
      if (input) {
        input.remove();
      }
    }
  }
};




/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-slider_entry_js.vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-slider_entry_js.js.map