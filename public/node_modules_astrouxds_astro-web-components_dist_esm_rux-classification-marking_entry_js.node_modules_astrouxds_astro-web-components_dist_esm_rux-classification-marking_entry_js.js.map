{"version":3,"file":"node_modules_astrouxds_astro-web-components_dist_esm_rux-classification-marking_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-classification-marking_entry_js.js","mappings":";;;;;;;;;;;;;;AAA0E;;AAE1E,4CAA4C,UAAU,aAAa,aAAa,uBAAuB,mBAAmB,qBAAqB,gBAAgB,sBAAsB,0BAA0B,iBAAiB,8BAA8B,yBAAyB,yBAAyB,uBAAuB,0CAA0C,kEAAkE,kBAAkB,MAAM,OAAO,iBAAiB,YAAY,WAAW,iBAAiB,kBAAkB,mBAAmB,SAAS,UAAU,gBAAgB,kBAAkB,cAAc,0BAA0B,kBAAkB,4BAA4B,YAAY,aAAa,0BAA0B,2CAA2C,kEAAkE,yCAAyC,uCAAuC,+DAA+D,yCAAyC,mCAAmC,4DAA4D,yCAAyC,kEAAkE,uCAAuC,gEAAgE,yCAAyC,kEAAkE;;AAE/6C;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAC,CAAC,iDAAI,QAAQ,qDAAC;AAC3B;AACA;AACA;;AAEkE","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-classification-marking.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-cf8aeed9.js';\n\nconst ruxClassificationMarkingCss = \":host{}:host div{z-index:1000;display:flex;justify-content:center;align-items:center;align-content:center;min-height:26px;box-sizing:border-box;font-size:var(--fontSize);font-weight:bold;font-family:var(--fontFamily);text-transform:uppercase;transition:top 0.5s ease;overflow-wrap:anywhere;color:var(--classificationTextColorLight);background-color:var(--classificationUnclassifiedBackgroundColor);position:absolute;top:0;left:0;flex-wrap:nowrap;flex-grow:1;width:100%}:host([tag]) div{position:relative;align-items:center;top:auto;left:auto;min-height:auto;width:fit-content;line-height:1;padding:0.25rem 0.9375rem;border-radius:3px;font-size:var(--fontSizeMD);flex-grow:0}:host([tag]){padding:0.25rem 0.9375rem}:host([classification=top-secret-sci]) div{background-color:var(--classificationTopSecretSCIBackgroundColor);color:var(--classificationTextColorDark)}:host([classification=top-secret]) div{background-color:var(--classificationTopSecretBackgroundColor);color:var(--classificationTextColorDark)}:host([classification=secret]) div{background-color:var(--classificationSecretBackgroundColor)}:host([classification=confidential]) div{background-color:var(--classificationConfidentialBackgroundColor)}:host([classification=controlled]) div{background-color:var(--classificationControlledBackgroundColor)}:host([classification=unclassified]) div{background-color:var(--classificationUnclassifiedBackgroundColor)}\";\n\nconst RuxClassificationMarking = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Defines which classification marking will be displayed.\n     */\n    this.classification = 'unclassified';\n    /**\n     * Declares the marking as a `tag` rather than the default banner style\n     */\n    this.tag = false;\n  }\n  get type() {\n    return this.tag ? 'tag' : 'banner';\n  }\n  _getDisplayData() {\n    const markings = {\n      banner: {\n        controlled: 'cui',\n        confidential: 'confidential',\n        secret: 'secret',\n        'top-secret': 'top secret',\n        'top-secret-sci': 'top secret//sci',\n        unclassified: 'unclassified',\n      },\n      tag: {\n        controlled: 'cui',\n        confidential: 'c',\n        secret: 's',\n        'top-secret': 'ts',\n        'top-secret-sci': 'TS//SCI',\n        unclassified: 'u',\n      },\n    };\n    const text = markings[this.type][this.classification];\n    if (!text) {\n      return 'Select a Classification Marking';\n    }\n    return text;\n  }\n  render() {\n    return (h(Host, null, h(\"div\", null, this._getDisplayData(), this.label)));\n  }\n};\nRuxClassificationMarking.style = ruxClassificationMarkingCss;\n\nexport { RuxClassificationMarking as rux_classification_marking };\n"],"names":[],"sourceRoot":""}