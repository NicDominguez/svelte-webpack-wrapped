{"version":3,"file":"node_modules_astrouxds_astro-web-components_dist_esm_rux-button_2_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-button_2_entry_js.js","mappings":";;;;;;;;;;;;;;;;AAAgF;AACxB;;AAExD,6BAA6B,YAAY,aAAa,kBAAkB,SAAS,eAAe,gBAAgB,kBAAkB,wCAAwC,6BAA6B,8BAA8B,eAAe,mBAAmB,gBAAgB,uBAAuB,uBAAuB,mBAAmB,iBAAiB,qDAAqD,YAAY,WAAW,sBAAsB,qBAAqB,+BAA+B,6BAA6B,kBAAkB,aAAa,kCAAkC,eAAe,gDAAgD,uDAAuD,+DAA+D,4EAA4E,2CAA2C,mDAAmD,kBAAkB,aAAa,+CAA+C,sBAAsB,wCAAwC,0CAA0C,8CAA8C,kBAAkB,cAAc,aAAa,sBAAsB,sBAAsB,4BAA4B,YAAY,WAAW,4BAA4B,6BAA6B,uBAAuB,sCAAsC,uDAAuD,mDAAmD,2DAA2D,0DAA0D,kEAAkE,6CAA6C,sCAAsC,4DAA4D,oDAAoD,mBAAmB,gBAAgB,eAAe,cAAc,0CAA0C,WAAW,gBAAgB,oCAAoC,gBAAgB,eAAe,yCAAyC,mBAAmB,kBAAkB,mBAAmB,gBAAgB,eAAe,eAAe,0CAA0C,WAAW,gBAAgB,qCAAqC,YAAY,WAAW,4GAA4G,wDAAwD,oDAAoD,oLAAoL,sCAAsC,kCAAkC,uBAAuB,cAAc,WAAW,gBAAgB,yCAAyC,sBAAsB,uBAAuB,2DAA2D,kBAAkB,mBAAmB,2EAA2E,sBAAsB,uBAAuB,+GAA+G,kBAAkB,mBAAmB,mEAAmE,YAAY,WAAW,mEAAmE,YAAY,WAAW,qBAAqB,4BAA4B,wEAAwE,qCAAqC,gCAAgC,4BAA4B,2CAA2C,qCAAqC;;AAElxH;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,qDAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD,YAAY,qDAAC,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA,OAAO,iEAAiE,UAAU,qDAAC,eAAe,wEAAwE,WAAW,qDAAC;AACtL;AACA,aAAa,OAAO,qDAAU;AAC9B;AACA;;AAEA,6CAA6C,aAAa,mBAAmB,uGAAuG,sBAAsB,wBAAwB,2BAA2B,yBAAyB,yBAAyB,0BAA0B,uBAAuB;;AAEhW;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,qDAAC,UAAU;AACvB;AACA;AACA;AACA;AACA,SAAS,EAAE,qDAAC;AACZ;AACA;AACA;;AAEuE;;;;;;;;;;;;;;;;ACnFvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqD","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-button_2.entry.js","webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-0c972f04.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-cf8aeed9.js';\nimport { h as hasShadowDom } from './utils-0c972f04.js';\n\nconst ruxButtonCss = \":host{}.rux-button{display:flex;position:relative;margin:0;padding:0 1rem;height:2.125rem;min-width:2.25rem;border-radius:var(--buttonBorderRadius);color:var(--buttonTextColor);font-family:var(--fontFamily);font-size:1rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;justify-content:center;align-items:center;user-select:none}.rux-button ::slotted(rux-icon),.rux-button rux-icon{height:1rem;width:1rem;margin-right:0.625rem}.rux-button:disabled{opacity:var(--disabledOpacity);cursor:var(--disabledCursor)}.rux-button:focus{outline:none}.rux-button:hover:not([disabled]){cursor:pointer}.rux-button:active:not([hover]):not([disabled]){border-color:var(--buttonActiveBorderColor) !important;background-color:var(--buttonActiveBackgroundColor) !important}.rux-button:hover:not([active]):not([disabled]):not(.rux-button--secondary){border-color:var(--buttonHoverBorderColor);background-color:var(--buttonHoverBackgroundColor)}.rux-button-group{display:flex}.rux-button-group .rux-button:not(:last-child){margin-right:0.625rem}.rux-button:not(.rux-button--secondary){border:1px solid var(--buttonBorderColor);background-color:var(--buttonBackgroundColor)}.rux-button__icon{height:1.5rem;width:1.5rem;margin-right:0.625rem;margin-left:-0.625rem}.rux-button__icon .rux-icon{height:auto;width:100%;fill:var(--buttonTextColor);color:var(--buttonTextColor)}.rux-button--secondary{color:var(--buttonSecondaryTextColor);background-color:var(--buttonSecondaryBackgroundColor);border:1px solid var(--buttonSecondaryBorderColor)}.rux-button--secondary:active:not([hover]):not([disabled]){border-color:var(--buttonSecondaryBorderColor) !important;background-color:var(--buttonSecondaryBackgroundColor) !important}.rux-button--secondary:hover:not([disabled]){color:var(--buttonSecondaryTextColor);background-color:var(--buttonSecondaryHoverBackgroundColor);border-color:var(--buttonSecondaryHoverBorderColor)}.rux-button--small{height:1.625rem;padding:0 1rem;line-height:1}.rux-button--small .rux-button--icon-only{width:3rem;height:1.625rem}.rux-button--small.rux-button__icon{height:0.875rem;width:0.875rem}.rux-button--small.rux-button--icon-only{min-width:1.625rem;padding:0 0.75rem}.rux-button--large{height:2.875rem;min-width:3rem;padding:0 1rem}.rux-button--large .rux-button--icon-only{width:3rem;height:2.875rem}.rux-button--large .rux-button__icon{height:1rem;width:1rem}.rux-button--critical,.rux-button--critical:active:not([hover]):not([disabled]):not(.rux-button--secondary){background-color:var(--colorCriticalDarken1) !important;border-color:var(--colorCriticalDarken1) !important}.rux-button--critical:hover:not([active]):not([disabled]),.rux-button--critical:active:not([hover]):not([disabled]):not(.rux-button--secondary):hover:not([active]):not([disabled]){background-color:var(--colorCritical);border-color:var(--colorCritical)}.rux-button--icon-only{font-size:0px;width:3rem;hieght:2.125rem}.rux-button--icon-only .rux-button__icon{margin-left:-0.625rem;margin-right:-0.625rem}.rux-button--large.rux-button--icon-only .rux-button__icon{margin-left:-1rem;margin-right:-1rem}.rux-button--icon-only ::slotted(rux-icon),.rux-button--icon-only rux-icon{margin-left:-0.625rem;margin-right:-0.625rem}.rux-button--large.rux-button--icon-only ::slotted(rux-icon),.rux-button--large.rux-button--icon-only rux-icon{margin-left:-1rem;margin-right:-1rem}.rux-button--small ::slotted(rux-icon),.rux-button--small rux-icon{height:1rem;width:1rem}.rux-button--large ::slotted(rux-icon),.rux-button--large rux-icon{height:1rem;width:1rem}.rux-button rux-icon{fill:var(--buttonTextColor)}.rux-button--secondary rux-icon,.rux-button--secondary rux-icon svg>use{fill:var(--buttonSecondaryTextColor)}.rux-button ::slotted(rux-icon){fill:var(--buttonTextColor)}.rux-button--secondary ::slotted(rux-icon){fill:var(--buttonSecondaryTextColor)}\";\n\nconst RuxButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Hides slotted text from the button by setting rux-button--icon-only class\n     */\n    this.iconOnly = false;\n    /**\n     * Changes button style from solid to secondary by setting rux-button--secondary class\n     */\n    this.secondary = false;\n    /**\n     * Toggles disabled attribute on the button\n     */\n    this.disabled = false;\n    /**\n     * The button type. Use 'submit' to submit native form data.\n     */\n    this.type = 'button';\n    /**\n     * Creates and appends a native <button> if used within a form\n     * so that it can trigger the submit event.\n     *\n     * Shadow DOM limitation prevents <form> from working correctly.\n     * https://github.com/ionic-team/ionic-framework/blob/main/core/src/components/button/button.tsx\n     * @param ev\n     */\n    this.handleClick = (ev) => {\n      if (hasShadowDom(this.el)) {\n        const form = this.el.closest('form');\n        if (form) {\n          ev.preventDefault();\n          const fakeButton = document.createElement('button');\n          fakeButton.type = this.type;\n          fakeButton.style.display = 'none';\n          form.appendChild(fakeButton);\n          fakeButton.click();\n          fakeButton.remove();\n        }\n      }\n    };\n  }\n  render() {\n    const { size, iconOnly, secondary, disabled, icon } = this;\n    return (h(\"button\", { type: \"button\", onClick: this.handleClick, class: {\n        'rux-button': true,\n        'rux-button--secondary': secondary,\n        'rux-button--small': size === 'small',\n        'rux-button--large': size === 'large',\n        'rux-button--icon-only': iconOnly,\n      }, \"aria-disabled\": disabled ? 'true' : null, disabled: disabled }, icon ? (h(\"rux-icon\", { size: \"extra-small\", icon: icon, color: secondary ? 'primary' : 'dark' })) : null, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n};\nRuxButton.style = ruxButtonCss;\n\nconst ruxButtonGroupCss = \".rux-button-group{display:flex;align-items:center}.rux-button-group rux-button:not(:last-child),.rux-button-group ::slotted(rux-button:not(:last-child)){margin-right:0.625rem}.rux-button-group--left{justify-content:flex-start}.rux-button-group--right{justify-content:flex-end}.rux-button-group--center{justify-content:center}\";\n\nconst RuxButtonGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * The horizontal alignment of buttons within the group\n     */\n    this.hAlign = 'left';\n  }\n  render() {\n    const { hAlign } = this;\n    return (h(\"div\", { class: {\n        'rux-button-group': true,\n        'rux-button-group--left': hAlign === 'left',\n        'rux-button-group--right': hAlign === 'right',\n        'rux-button-group--center': hAlign === 'center',\n      } }, h(\"slot\", null)));\n  }\n};\nRuxButtonGroup.style = ruxButtonGroupCss;\n\nexport { RuxButton as rux_button, RuxButtonGroup as rux_button_group };\n","const hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n\nexport { hasShadowDom as h, renderHiddenInput as r };\n"],"names":[],"sourceRoot":""}