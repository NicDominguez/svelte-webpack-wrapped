{"version":3,"file":"node_modules_astrouxds_astro-web-components_dist_esm_rux-log_entry_js.node_modules_astrouxds_astro-web-components_dist_esm_rux-log_entry_js.js","mappings":";;;;;;;;;;;;;;AAA0E;;AAE1E,yBAAyB,cAAc,gBAAgB,UAAU,6DAA6D,4BAA4B,UAAU,wBAAwB,aAAa,mBAAmB,iBAAiB,iBAAiB,sBAAsB,SAAS,uBAAuB,YAAY,qBAAqB,gCAAgC,iDAAiD,eAAe;;AAErb;AACA;AACA,IAAI,qDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAC,CAAC,iDAAI,QAAQ,qDAAC,WAAW,eAAe,EAAE,qDAAC,oBAAoB,qDAAC,WAAW,sBAAsB,EAAE,qDAAC,uBAAuB,mBAAmB,EAAE,qDAAC,WAAW,0BAA0B,EAAE,qDAAC,+BAA+B,qDAAC,yCAAyC,qDAAC,iCAAiC,qDAAC,4BAA4B,qCAAqC,EAAE,qDAAC,UAAU,iCAAiC,WAAW,qDAAC,sBAAsB,wGAAwG,yBAAyB,qDAAC,UAAU,2DAA2D,oBAAoB,qDAAC,8JAA8J,qDAAC,WAAW,oBAAoB,EAAE,qDAAC,yDAAyD,qDAAC,wBAAwB,qDAAC,yBAAyB,qDAAC,mBAAmB,wGAAwG,IAAI,qDAAC,yBAAyB,qDAAC,iBAAiB,oBAAoB,IAAI,qDAAC;AACjpC;AACA;AACA;;AAE6B","sources":["webpack://svelte-app/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-log.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-cf8aeed9.js';\n\nconst ruxLogCss = \":host{display:block;overflow:hidden}rux-table{--tableHeaderBackgroundColor:var(--logHeaderBackgroundColor)}.rux-log__header-event-cell{width:80%}.header-event-container{display:flex;align-items:center}.rux-log__filter{margin-left:auto}rux-table-header-cell{width:1%}.rux-log__notification{width:2000%;align-content:center;color:var(--logFilterTextColor);background-color:var(--logFilterBackgroundColor);padding:0.5rem}\";\n\nconst RuxLog = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * An array of objects to display as log\n     */\n    this.data = [];\n    /**\n     * Accepts [IANA timezone string format](https://www.iana.org/time-zones) such as `America/Los_Angeles`. Default timezone is `UTC`. See [`toLocaleString()` on MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString#Parameters) for more details.\n     */\n    this.timezone = 'UTC';\n  }\n  setFilter(e) {\n    this.filter = e.target.value;\n  }\n  get filteredData() {\n    if (this.filter) {\n      const filter = this.filter;\n      return this.data.filter((row) => row.message.includes(filter));\n    }\n    else {\n      return this.data;\n    }\n  }\n  render() {\n    return (h(Host, null, h(\"slot\", { name: \"table\" }, h(\"rux-table\", null, h(\"slot\", { name: \"table-header\" }, h(\"rux-table-header\", { class: \"relative\" }, h(\"slot\", { name: \"table-header-row\" }, h(\"rux-table-header-row\", null, h(\"rux-table-header-cell\", null, \"Time\"), h(\"rux-table-header-cell\", null), h(\"rux-table-header-cell\", { class: \"rux-log__header-event-cell\" }, h(\"div\", { class: \"header-event-container\" }, \"Event\", h(\"rux-input-field\", { small: true, class: \"rux-log__filter\", type: \"search\", \"onRux-input\": (event) => this.setFilter(event) }))))))), this.filter && (h(\"div\", { class: \"rux-log__notification\", part: \"log--notification\" }, \"A filter with \", h(\"b\", null, this.filter), \" is enabled.\", ' ', this.data.length - this.filteredData.length, \" of\", ' ', this.data.length, \" records are currently hidden.\")), h(\"slot\", { name: \"table-body\" }, h(\"rux-table-body\", null, this.filteredData.map((row) => (h(\"rux-table-row\", null, h(\"rux-table-cell\", null, h(\"rux-datetime\", { hour: \"2-digit\", \"time-zone\": this.timezone, minute: \"2-digit\", second: \"2-digit\", date: row.timestamp })), h(\"rux-table-cell\", null, h(\"rux-status\", { status: row.status })), h(\"rux-table-cell\", null, row.message))))))))));\n  }\n};\nRuxLog.style = ruxLogCss;\n\nexport { RuxLog as rux_log };\n"],"names":[],"sourceRoot":""}